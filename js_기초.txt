js.

* js는 프로그래밍 언어.
* 프로그래밍 언어는 보통 구조가 비슷해요.
* 필수적인 요소들이 보통
0. 자료형 (integer, string, 기타 사용자 자료형(class))
1. 변수
2. 연산 (+, *, - 등등)
3. 조건문
4. 반복문
5. 기본 함수들
6. 예외 처리.. 등등등인데 프로그래머 하실거 아니면 모르셔도 되어요.


0. js의 자료형
(일단 명심할 건, js의 자료형은 암시적. 무슨 말이냐면 자료형을 따로 선언하지 않아요. js가 자동으로 해석해요.)
var i = 5; <- 내부적으로는 int에요. 하지만 저희는 int라고 명시하지 않아요.
var i = 'haha'; <- 내부적으로는 str에요. 하지만 명시하지 않아요.
var i = new Date(); <- date 자료형이고 선언된 시각을 값으로 가짐.
var i = true; 또는 false; <- true, false는 Boolean(진리값) 자료형.

이 말은 무슨 말이냐면, 막 쓰셔도 된다는 이야기에요.
그렇다면 자료형을 왜 알아야 하는가.

자료형마다 기본 method들이 있어요.
예를 들면 int 자료형은 toString() 이라는 메소드가 있어요.
이런 메소드들에 대해서 친해지셔야 해요.

숫자가 와야할 곳에 문자(string)이 오면 정상적으로 작동하지 않을 수 있음.
거꾸로도 마찬가지. 그래서 적당히만 일단 알아두시면 되어요.

자료형이 중요한 이유 중 가장 중요한 이유는, 연산은 자료형에 대해 정의된다는 거에요.
1 + 1과 '1' + '1' 에서 + 연산은 서로 다른 연산.
1 + 1 == 2, '1' + '1' == '11'

즉 정리하면, 자료형에 따라 연산과 기본 method들이 따로 정의된다고 이해하시면 되어요.

1. 변수
var i;
var i = 5;

(== 는 비교문. =는 값 할당 연산.)

변수란 값을 store하는 틀? 공간? 등등

2. 연산
수학에서의 연산이랑 비슷. 자료형에 대해 정의된다.
1 + 1 에서 + 가 연산.

a + b, a * b, a++, a ** b(지수 연산), 비교 연산들(==, >, <, >=, <=)

중요한건, 연산은 자료형에 대해서 정의됨. 즉, 1 + 1, '1' + '1'은 다른 연산.
다른 연산이라 함은, 결과가 달라질 수 있다는 것. 1+1 == 2, '1'+'1' == '11'

3. 조건문
if (조건식) {
    조건식이 참일 때 실행할 명령들.
}
else {
    조건식이 거짓일 때 실행할 명령들.
}

4. 반복문
for, while 이 두가지가 대표. 일단 얘들만 아시면 되어요.

for (var i = 0; i < 50; i++) {
    console.log(i);
}

for (var i in [1, 2, 3, 4, 5]) {
    console.log(i);
}

while (조건식) {
    조건식이 참일 경우 실행될 명령들.
}

while은 조건식이 참인 경우 계속 반복. 조건식이 false가 되면 반복 그만.
실행순서. 조건식 판별 -> 내부 실행 -> 조건식 판별 -> 내부 실행

a = 1
while (a < 5) {
    a += 1;
    console.log(a);
}


jquery 랑 js 문법의 혼용

jquery <- 하나의 자료형.

자료형은 연산과 메소드가 정의된다.
jquery는 일종의 custom 자료형이고
이런 custom 자료형을, class라고 해요.
class는 인스턴스를 갖고, 연산과 프로퍼티, 메소드를 정의할 수 있어요.
jquery는 class고

우리가 $('span') 이런식으로 선언하면, jquery instance를 가져와요.
instance는 class의 내용 이라는건데 비유하자면

integer <- 자료형(클래스)
5 <- integer의 instance 라 이해하셔도 되어요.

1, 2, 3, 4, 5 <- 전부 integer 자료형이에요. (비유하자면 클래스의 instance와 같은 위상)

$('span').hide(); jquery에 미리 정의된 메소드를 통해 조작.

